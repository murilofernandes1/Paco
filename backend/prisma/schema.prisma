
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String
  role String @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
  reviews Review[]
  payments Payment[]
}
model Product {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String 
  price     Int 
  quantity  Int     
  orders    Order[]
  reviews   Review[]
}

model Order {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  number       String
  address String 
  paymentMethod String 
  product    Product  @relation(fields: [productId], references: [id])
  productId   String   @db.ObjectId 
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId 
  payments Payment[]
  review Review? @relation(fields: [reviewId], references: [id])
  reviewId String? @db.ObjectId
  status String @default("Pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  content String
  stars Int
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId 
  order Order[]
  product    Product  @relation(fields: [productId], references: [id])
  productId   String   @db.ObjectId 
}

model Payment {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId 
  order Order @relation(fields: [orderId], references: [id])
  orderId String @db.ObjectId 
  method   String  @db.ObjectId
  status   String  @default("pending")
}